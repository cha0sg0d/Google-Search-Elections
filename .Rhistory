df = read.csv('/Users/anthonygoss/Projects/Trends/final_fina,.csv')
mod = lm(Outcome ~ Lag.R.vote.from.prior.cycle + Dem.state.vs.Natl + Rep.state.vs.Natl, data=df)
mod1 = lm(Outcome ~ Dem.state.vs.Natl + Rep.state.vs.Natl, data=df)
summary(mod)
summary(mod)
# plot(mod)
plot(Outcome,Lag.R.vote..,data=df)
df = read.csv('/Users/anthonygoss/Projects/Trends/final_2.csv')
mod = lm(Outcome ~ Lag.R.vote.from.prior.cycle + Dem.state.vs.Natl + Rep.state.vs.Natl, data=df)
mod1 = lm(Outcome ~ Dem.state.vs.Natl + Rep.state.vs.Natl, data=df)
summary(mod)
summary(mod)
# plot(mod)
plot(Outcome,Lag.R.vote..,data=df)
df = read.csv('/Users/anthonygoss/Projects/Trends/final_2.csv')
df = read.csv('/Users/anthonygoss/Projects/Trends/data/newfinal_2.csv')
df = read.csv('/Users/anthonygoss/Projects/Trends/data/final_2.csv')
df.columns()
df.column_names()
df.colnames()
colnames(df)
df = read.csv('/Users/anthonygoss/Projects/Trends/data/final_2.csv')
colnames(df)
mod = lm(actual_r_vote ~ d_search + r_search + d_state_vs_national + r_state_vs_national + lag_vote, data=df)
summary(mod)
mod = lm(actual_r_vote ~ r_search + d_state_vs_national + r_state_vs_national + lag_vote, data=df)
summary(mod)
df = read.csv('/Users/anthonygoss/Projects/Trends/data/final_2.csv')
colnames(df)
mod = lm(actual_r_vote ~ rep_dem_ratio + d_state_vs_national + r_state_vs_national + lag_vote, data=df)
summary(mod)
plot_stuff <- augment(mod)
install.packages("plotly")
plot(actual_r_vote,lag_vote,data=df)
plot(df~actual_r_vote,df~lag_vote,data=df)
plot(df$actual_r_vote,df$lag_vote,data=df)
plot(df$actual_r_vote,df$rep_dem_ratio,data=df)
plot(actual_r_vote,rep_dem_ratio,data=df)
plot(df$actual_r_vote,df$rep_dem_ratio,data=df)
plot(df$lag_vote,df$actual_r_vote,data=df)
plot(df$rep_dem_ratio,df$actual_r_vote,data=df)
warnings()
plot(df$r_state_vs_national,df$actual_r_vote,data=df)
summary(mod)
summary(mod)
df1 = read.csv('/Users/anthonygoss/Projects/Trends/data/final_2.csv')
mod = lm(actual_r_vote ~ rep_dem_ratio + d_state_vs_national + r_state_vs_national + lag_vote, data=df1)
df1 <- df %>%
filter(year != 2016)
df <- df1 %>%
filter(year != 2016)
df <- df1 %>%
filter(year != 2016)
library(dplyr)
df <- df1 %>%
filter(year != 2016)
mod = lm(actual_r_vote ~ rep_dem_ratio + d_state_vs_national + r_state_vs_national + lag_vote, data=df)
summary(mod)
df2 <- df1 %>%
filter(year == 2016)
predict(mod, newdata=df2)# plot(mod)
val <- predict(mod, newdata=df2)
plot(val,df2$actual_r_vote,data=df2)
ibrary(ggplot2)
library(ggplot2)
ggplot(df2, aes(State)) +
geom_point(aes(y = val, colour = "red")) +
geom_line(aes(y = acutal_r_vote, colour = "blue"))
View(df2)
ggplot(df2, aes(State)) +
geom_point(aes(y = val, colour = "red")) +
geom_line(aes(y = actual_r_vote, colour = "blue"))
ggplot(df2, aes(State)) +
geom_point(aes(y = val, colour = "red")) +
geom_point(aes(y = actual_r_vote, colour = "blue"))
ggplot(df2,aes(y=actual_r_vote,x=State))+geom_point()+geom_smooth(method="lm")
mod = lm(actual_r_vote ~ rep_dem_ratio + d_state_vs_national + r_state_vs_national + lag_vote, data=df)
ggplot(df2,aes(y=actual_r_vote,x=State))
+geom_point()
+geom_smooth(method="lm")
ggplot(df2,aes(y=actual_r_vote,x=State)) +
geom_point() +
geom_smooth(method="lm")
ggplot(df2,aes(y=actual_r_vote,x=State)) +
geom_point() +
geom_smooth(method=mod)
unseen <- predict(mod, newdata=df2)
seen <- predict(mod)
df2$predicted <- predict(mod,newdata=df2)
require(ggplot2)
qplot(actual_r_vote,predicted,data=df2)
library(broom)
install.packages("broom")
aug <- augment(mod)
ggplot(aug, aes(x = .fitted, y = .resid)) + geom_point()
aug <- augment(mod)
library(broom)
aug <- augment(mod)
ggplot(aug, aes(x = .fitted, y = .resid)) + geom_point()
df2$residual <- abs(df2$predicted - df2$actual_r_vote)
df2 <- df2 %>%
mutate(Correct = ifelse((actual_r_vote > 50 && predicted > 50 ), 1, 0))
df2 <- df2 %>%
mutate(Correct = ifelse((actual_r_vote > 50) && (predicted > 50 ), 1, 0))
avg(df2$residual)
averge(df2$residual)
average(df2$residual)
mean(df2$residual)
df2 <- df2 %>%
mutate(Correct = ifelse((actual_r_vote > 50) & (predicted > 50 ), 1, 0))
df2 <- df2 %>%
mutate(Correct = ifelse(((actual_r_vote > 50) & (predicted > 50 )) | ((actual_r_vote < 50) & (predicted < 50 )), 1, 0))
df2$residual <-  df2$actual_r_vote -df2$predicted
df2$residual <- df2$predicted - df2$actual_r_vote
train <- sample(nrow(df1), nrow(df1) * 0.8)
test <- -train
mod = lm(actual_r_vote ~ rep_dem_ratio + d_state_vs_national + r_state_vs_national + lag_vote, data=train)
mod = lm(actual_r_vote ~ rep_dem_ratio + d_state_vs_national + r_state_vs_national + lag_vote, data=df1[train])
df3 <- df1[train]
df3 <- df1(train)
df3 <- df1[train,]
train <- df1[sample(nrow(df1), nrow(df1) * 0.8),]
test <- df1[-train,]
train <- df1[train,]
test <- df1[test,]
mod = lm(actual_r_vote ~ rep_dem_ratio + d_state_vs_national + r_state_vs_national + lag_vote, data=train)
unseen <- predict(mod, newdata=test)
seen <- predict(mod)
test$predicted <- predict(mod, newdata=test)
test$residual <- test$predicted - test$actual_r_vote
View(test)
test <- test %>%
mutate(Correct = ifelse(((actual_r_vote > 50) & (predicted > 50 )) | ((actual_r_vote < 50) & (predicted < 50 )), 1, 0))
table(test$Correct)
df1 = read.csv('/Users/anthonygoss/Projects/Trends/data/final_2.csv')
df <- df1 %>%
filter(year != 2016)
df2 <- df1 %>%
filter(year == 2016)
sum = summary(mod)
View(sum)
summary(mod)
mod = lm(actual_r_vote ~ rep_dem_ratio + r_state_vs_national + lag_vote, data=train)
summary(mod)
mod = lm(actual_r_vote ~ lag_vote,data=df1)
summary(mod)
mod = lm(actual_r_vote ~ lag_vote,data=df1)
summary(mod)
mod = lm(actual_r_vote ~ lag_vote,data=df1)
summary(mod)
mod = lm(actual_r_vote ~ lag_vote,data=df1)
summary(mod)
mod = lm(actual_r_vote ~ lag_vote,data=df)
summary(mod)
mod = lm(actual_r_vote ~ lag_vote,data=df1)
summary(mod)
summary(mod1)
mod1 = lm(actual_r_vote ~ rep_dem_ratio + r_state_vs_national + lag_vote, data=train)
summary(mod1)
mod2 = lm(actual_r_vote ~ rep_dem_ratio + r_state_vs_national + lag_vote, data=df)
summary(mod2)
f2$predicted <- predict(mod, newdata=df2)
df2$residual <- df2$predicted - df2$actual_r_vote
df2 <- df2 %>%
mutate(Correct = ifelse(((actual_r_vote > 50) & (predicted > 50 )) | ((actual_r_vote < 50) & (predicted < 50 )), 1, 0))
table(df2$Correct)
df2$predicted <- predict(mod2, newdata=df2)
df2$residual <- df2$predicted - df2$actual_r_vote
df2 <- df2 %>%
mutate(Correct = ifelse(((actual_r_vote > 50) & (predicted > 50 )) | ((actual_r_vote < 50) & (predicted < 50 )), 1, 0))
table(df2$Correct)
test$predicted <- predict(mod, newdata=test)
test$residual <- test$predicted - test$actual_r_vote
test <- test %>%
mutate(Correct = ifelse(((actual_r_vote > 50) & (predicted > 50 )) | ((actual_r_vote < 50) & (predicted < 50 )), 1, 0))
table(test$Correct)
base_2016 < df1 %>%
filter(year == 2016)
base_2016 <- df1 %>%
filter(year == 2016)
mod = lm(actual_r_vote ~ lag_vote,data=df)
summary(mod)
base_2016$predicted <- predict(mod, newdata=base_2016)
base_2016$residual <- base_2016$predicted - base_2016$actual_r_vote
base_2016 <-  base_2016 %>%
mutate(Correct = ifelse(((actual_r_vote > 50) & (predicted > 50 )) | ((actual_r_vote < 50) & (predicted < 50 )), 1, 0))
table(base_2016$Correct)
View(mod)
View(mod)
table(base_2016$Correct)
table(df2$Correct)
summary(mod2)
summary(mod)
library(dplyr)
library(ggplot2)
library(broom)
df1 = read.csv('/Users/anthonygoss/Projects/Trends/data/final_2.csv')
df <- df1 %>%
filter(year != 2016)
df2 <- df1 %>%
filter(year == 2016)
base_2016 <- df1 %>%
filter(year == 2016)
train <- sample(nrow(df1), nrow(df1) * 0.8)
test <- -train
train <- df1[train,]
test <- df1[test,]
# Baseline Model predicting 2016
mod = lm(actual_r_vote ~ lag_vote,data=df)
sum_base = summary(mod)
base_2016$predicted <- predict(mod, newdata=base_2016)
base_2016$residual <- base_2016$predicted - base_2016$actual_r_vote
# MODEL 1 - Random assortment of rows / years
mod1 = lm(actual_r_vote ~ rep_dem_ratio + r_state_vs_national + lag_vote, data=train)
sum_mod1 = summary(mod1)
# Predictions
test$predicted <- predict(mod, newdata=test)
test$residual <- test$predicted - test$actual_r_vote
# MODEL 2 2016 is heldout data
mod2 = lm(actual_r_vote ~ rep_dem_ratio + r_state_vs_national + lag_vote, data=df)
sum_mod2 = summary(mod2)
# Predictions
df2$predicted <- predict(mod2, newdata=df2)
df2$residual <- df2$predicted - df2$actual_r_vote
# base_2016 <-  base_2016 %>%
#   mutate(Correct = ifelse(((actual_r_vote > 50) & (predicted > 50 )) | ((actual_r_vote < 50) & (predicted < 50 )), 1, 0))
#
# table(base_2016$Correct)
View(sum)
library(dplyr)
library(ggplot2)
library(broom)
df1 = read.csv('/Users/anthonygoss/Projects/Trends/data/final_2.csv')
df <- df1 %>%
filter(year != 2016)
df2 <- df1 %>%
filter(year == 2016)
base_2016 <- df1 %>%
filter(year == 2016)
train <- sample(nrow(df1), nrow(df1) * 0.8)
test <- -train
train <- df1[train,]
test <- df1[test,]
# Baseline Model predicting 2016
mod = lm(actual_r_vote ~ lag_vote,data=df)
sum_base = summary(mod)
base_2016$predicted <- predict(mod, newdata=base_2016)
base_2016$residual <- base_2016$predicted - base_2016$actual_r_vote
# MODEL 1 - Random assortment of rows / years
mod1 = lm(actual_r_vote ~ rep_dem_ratio + r_state_vs_national + lag_vote, data=train)
sum_mod1 = summary(mod1)
# Predictions
test$predicted <- predict(mod, newdata=test)
test$residual <- test$predicted - test$actual_r_vote
# MODEL 2 2016 is heldout data
mod2 = lm(actual_r_vote ~ rep_dem_ratio + r_state_vs_national + lag_vote, data=df)
sum_mod2 = summary(mod2)
# Predictions
df2$predicted <- predict(mod2, newdata=df2)
df2$residual <- df2$predicted - df2$actual_r_vote
# base_2016 <-  base_2016 %>%
#   mutate(Correct = ifelse(((actual_r_vote > 50) & (predicted > 50 )) | ((actual_r_vote < 50) & (predicted < 50 )), 1, 0))
#
# table(base_2016$Correct)
View(sum_base)
library(dplyr)
library(ggplot2)
library(broom)
df1 = read.csv('/Users/anthonygoss/Projects/Trends/data/final_2.csv')
df <- df1 %>%
filter(year != 2016)
df2 <- df1 %>%
filter(year == 2016)
base_2016 <- df1 %>%
filter(year == 2016)
train <- sample(nrow(df1), nrow(df1) * 0.8)
test <- -train
train <- df1[train,]
test <- df1[test,]
# Baseline Model predicting 2016
mod = lm(actual_r_vote ~ lag_vote,data=df)
summary(mod)
base_2016$predicted <- predict(mod, newdata=base_2016)
base_2016$residual <- base_2016$predicted - base_2016$actual_r_vote
# MODEL 1 - Random assortment of rows / years
mod1 = lm(actual_r_vote ~ rep_dem_ratio + r_state_vs_national + lag_vote, data=train)
summary(mod1)
# Predictions
test$predicted <- predict(mod, newdata=test)
test$residual <- test$predicted - test$actual_r_vote
# MODEL 2 2016 is heldout data
mod2 = lm(actual_r_vote ~ rep_dem_ratio + r_state_vs_national + lag_vote, data=df)
summary(mod2)
# Predictions
df2$predicted <- predict(mod2, newdata=df2)
df2$residual <- df2$predicted - df2$actual_r_vote
# base_2016 <-  base_2016 %>%
#   mutate(Correct = ifelse(((actual_r_vote > 50) & (predicted > 50 )) | ((actual_r_vote < 50) & (predicted < 50 )), 1, 0))
#
# table(base_2016$Correct)
